[package]
name = "zero2prod"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# 어떤 형태의 경로든 기술할 수 있지만, 커뮤니티의 관습을 따른다.
# `name` 필드를 사용해서 라이브러리 이름을 지정한다. 지정하지 않으면,
# cargosms `package.name`을 사용한다.
path = "src/lib.rs"

# 이중 대괄호를 사용한 것에 주의하자. TOML에서의 배열 표기 문법이다.
# 프로젝트에 하나의 라이브러리는 물론, 여러 바이너리를 포함할 수도 있다.
# 동일한 저장소에서 여러 라이브러리를 관리하고자 한다면,
# workspace 피처를 살펴보기 바란다.
[[bin]]
path = "src/main.rs"
name = "zero2prod"

[dependencies]
config = "0.14"
actix-web = "4.5.1"
tokio = { version = "1.37.0", features = ["macros", "rt-multi-thread"] }
# 옵셔널 `derive` 피처를 사용해야, `serde`의 절차적 매크로인
# `#[derive(Serialize)]` 와 `#[derive(Deserialize)]` 를 사용할 수 있다.
# 이 피처는 기본으로 활성화되어 있지 않다. 프로젝트에 불필요한 디펜던시를 사용하지 않도록 하기 위해서이다.
serde = { version = "1.0.197", features = ["derive"] }

# 테이블과 유사한 toml 구문을 사용해서 긴 코드 행을 줄이자.
[dependencies.sqlx]
version = "0.7.4"
default-features = false
features = [
    "runtime-tokio-rustls", # sqlx가 TLS 백엔드로서 퓨처와 rustls에 대해 tokio 런타임을 사용하도록 지시한다.
    "macros",   # sqlx::query!와 sqlx::query_as!에 접근할 수 있다. 이후에 많이 사용함
    "postgres", # Postgres 특정 함수를 잠금 해제한다. (즉 비표준 SQL 타입)
    "uuid",     # SQL UUID를 ssid 크레이트의 Uuid 타입에 매핑한다. id 컬럼을 다루기 위해 필요하다.
    "chrono",   # SQL timestamptz 를 chrono 크레이트의 DateTime<T> 타입에 매핑한다. subscribed_at 칼럼을 다룰 때 필요하다.
    "migrate"   # sqlx-cli가 내부적으로 사용한 동일한 함수를 사용해서 마이그레이션을 관리할 수 있다. 테스트 스위트에서 유용하게 사용된다.
]

# Dev 디펜던시는 테스트나 예시를 실행할 때만 사용된다.
# 최종 애플리케이션 바이너리에는 포함되지 않는다.
[dev-dependencies]
reqwest = "0.12.2"